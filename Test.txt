
const { test, expect } = require('@playwright/test');

test.setTimeout(60000); // Set per test timeout

test('GETWAYS Login flow test', async ({ page }) => {
  // Go to login page with safe loading
  await page.goto('https://skynbliss.co/login', {
    waitUntil: 'domcontentloaded',
    timeout: 60000
  });

  // Step 1: Fill email
  const emailInput = page.locator('input[name="emailPhone"]');
  await expect(emailInput).toBeVisible();
  await emailInput.fill('TestPlayer@gmail.com');

  // Step 2: Click NEXT
  const nextButton = page.getByRole('button', { name: 'NEXT' });
  await expect(nextButton).toBeEnabled();
  await nextButton.click();

  // Step 3: Confirm password screen
  const passwordHeader = page.getByRole('heading', { name: 'Sign in to your Account' });
  await expect(passwordHeader).toBeVisible();

  // Step 4: BACK button
  const backButton = page.getByRole('button', { name: 'Back' });
  await expect(backButton).toBeVisible();
  await backButton.click();

  // Step 5: Re-enter email
  await expect(emailInput).toBeVisible();
  await emailInput.fill('TestPlayer@gmail.com');
  await nextButton.click();

  // Step 6: Confirm email disabled
  const disableEmail = page.locator('input[disabled]');
  await expect(disableEmail).toHaveValue('TestPlayer@gmail.com');

  // Step 7: Fill password
  const passwordInput = page.locator('input[type="password"]');
  await expect(passwordInput).toBeVisible();
  await passwordInput.fill('Test@123');

  // Step 8: Check Remember me
  const rememberMe = page.locator('input[type="checkbox"]');
  await rememberMe.check();

  // Step 9: Validate links
  await expect(page.getByText('Watch Videos')).toBeVisible();

  // Step 10: Click LOGIN button
  const loginButton = page.getByRole('button', { name: 'LOGIN' });
  await expect(loginButton).toBeEnabled();
  await loginButton.click();

  // Step 11: Validate final page
  await expect(page).toHaveTitle(/Getways/i, { timeout: 10000 });
});




// Recharge page


// test('Complete flow: Login and Recharge using Pay By Card (Stripe)', async ({ page }) => {

//     await page.goto('https://skynbliss.co/login', { timeout: 120000, waitUntil: 'load' });

//     await page.locator('input[name="emailPhone"]').fill('TestPlayer@gmail.com');
//     await page.locator('button:has-text("Next")').click();
//     await expect(page.locator('h6')).toHaveText('Sign in to your Account');

//     await page.locator('input[name="password"]').fill('Test@123');
//     await page.locator('button:has-text("Login")').click();
//     await expect(page).toHaveTitle(/Getways/i);

//     await page.waitForURL('https://skynbliss.co/playerDashboard', { timeout: 10000 });

//     await page.locator('p.MuiTypography-root', { hasText: '50' });

//     await page.getByLabel('Payment Portal');

//     await page.waitForTimeout(2000);


//     await page.waitForSelector("//div[contains(., 'Pay By Card')]", { timeout: 60000 });


//     const stripeButton = page.locator("//p[normalize-space()='Pay By Card']");

//     await stripeButton.waitFor({ state: 'attached', timeout: 60000 });

//     await stripeButton.scrollIntoViewIfNeeded();
//     await stripeButton.waitFor({ state: 'visible', timeout: 60000 });

//     await stripeButton.click();

//     await page.waitForURL('https://skynbliss.co/stripe-payment', { timeout: 60000 });

//     const emailFrame = page.frameLocator('iframe').first();
//     await emailFrame.locator('input#email').waitFor({ state: 'visible', timeout: 60000 });
//     await emailFrame.locator('input#email').fill('testplayer@gmail.com');

//     const allFrames = page.frames();
//     let cardFrame;

//     for (const frame of allFrames) {
//         const input = await frame.$('input#cardNumber');
//         if (input) {
//             cardFrame = frame;
//             break;
//         }
//     }

//     if (!cardFrame) {
//         throw new Error('Card number iframe not found');
//     }

//     await cardFrame.waitForSelector('input#cardNumber', { timeout: 10000 });
//     await cardFrame.fill('input#cardNumber', '4242 4242 4242 4242');

//     let expiryFrame;
//     for (const frame of page.frames()) {
//         const input = await frame.$('input#cardExpiry');
//         if (input) {
//             expiryFrame = frame;
//             break;
//         }
//     }

//     if (!expiryFrame) throw new Error('Card expiry iframe not found');

//     await expiryFrame.fill('input#cardExpiry', '04/42');


//     let cvcFrame;
//     for (const frame of page.frames()) {
//         const input = await frame.$('input#cardCvc');
//         if (input) {
//             cvcFrame = frame;
//             break;
//         }
//     }
//     if (!cvcFrame) throw new Error('Card CVC iframe not found');
//     await cvcFrame.fill('input#cardCvc', '123');

//     let nameFrame;
//     for (const frame of page.frames()) {
//         const input = await frame.$('input#billingName');
//         if (input) {
//             nameFrame = frame;
//             break;
//         }
//     }
//     if (!nameFrame) throw new Error('Billing name iframe not found');
//     await nameFrame.fill('input#billingName', 'Test Player');

//     let payFrame;
//     for (const frame of page.frames()) {
//         const btn = await frame.$('button[type="submit"]');
//         if (btn) {
//             payFrame = frame;
//             break;
//         }
//     }
//     if (!payFrame) throw new Error('Pay button iframe not found');

    
//     const payBtn = payFrame.locator('button[type="submit"]', { hasText: 'Pay' });
//     await payBtn.waitFor({ state: 'visible', timeout: 20000 });
//     await payBtn.click();

//     await page.locator('h2').waitFor({ state: 'visible', timeout: 30000 });

//     await expect(page.locator('h2')).toHaveText('Completed Payment');
    
//     await page.locator("//button[normalize-space()='Back']").click();

//     await expect(page).toHaveURL('https://skynbliss.co/playerDashboard');
// });


// test('Wallet Recharge - Reject amount less than $30', async ({ page }) => {
//   await page.goto('https://skynbliss.co/login');

//   await page.locator('input[name="emailPhone"]').fill('TestPlayer@gmail.com');
//   await page.getByRole('button', { name: 'Next' }).click();
//   await page.locator('input[name="password"]').fill('Test@123');
//   await page.getByRole('button', { name: 'Login' }).click();
//   await expect(page).toHaveTitle(/Getways/i);

//   await page.getByText('Recharge your account').waitFor({ state: 'visible' });

//   await page.getByText('Payment Portal').click();

//   await page.locator('input[type="radio"][value="wallet"]').check();

//   await page.getByText('10', { exact: true }).click();

//   await page.getByRole('button', { name: 'Wallet Recharge' }).click();

//   await expect(page.getByText('Recharge amount must be at least $30.00.')).toBeVisible();
// });

// test('Wallet Recharge - Valid amount $30 passes', async ({ page }) => {
//   await page.goto('https://skynbliss.co/login');

//   await page.locator('input[name="emailPhone"]').fill('TestPlayer@gmail.com');
//   await page.getByRole('button', { name: 'Next' }).click();
//   await page.locator('input[name="password"]').fill('Test@123');
//   await page.getByRole('button', { name: 'Login' }).click();
//   await expect(page).toHaveTitle(/Getways/i);

//   await page.getByText('Recharge your account').waitFor({ state: 'visible' });

//   await page.getByText('Payment Portal').click();

//   await page.locator('input[type="radio"][value="wallet"]').check();

//   await page.getByText('30').click();

//   await page.getByRole('button', { name: 'Wallet Recharge' }).click();

//   await expect(page.getByText(/Recharge Successful!/i)).toBeVisible();
// });


//Redeem 



// import { test, expect } from '@playwright/test';

// test('Redeem with transaction note', async ({ page }) => {

//   await page.goto('https://skynbliss.co/login', { timeout: 120000, waitUntil: 'load' });

//   await page.locator('input[name="emailPhone"]').fill('TestPlayer@gmail.com');
//   await page.locator('button:has-text("Next")').click();
//   await expect(page.locator('h6')).toHaveText('Sign in to your Account');

//   await page.locator('input[name="password"]').fill('Test@123');
//   await page.locator('button:has-text("Login")').click();
//   await expect(page).toHaveTitle(/Getways/i);

//   await page.getByRole('button', { name: /Redeem/i }).click();

//   const selectedAmount = page.getByRole('button', { name: 'AOG Symbol 50', exact: true });
//   await expect(selectedAmount).toHaveClass(/css.*MuiButtonBase-root-MuiButton-root/);

//   await page.locator('//input[@type="text" and @aria-invalid="false"]').fill('Test redeem for automation');


//   await page.getByRole('button', { name: /Redeem Request/i }).click();

//   await expect(page.locator("//div[@class='MuiSnackbarContent-message css-1exqwzz-MuiSnackbarContent-message']")).toBeVisible();

// });




// test('Redeem with 100 AOG and transaction note', async ({ page }) => {
//   await page.goto('https://skynbliss.co/login', { timeout: 120000, waitUntil: 'load' });


//   await page.locator('input[name="emailPhone"]').fill('TestPlayer@gmail.com');
//   await page.locator('button:has-text("Next")').click();
//   await expect(page.locator('h6')).toHaveText('Sign in to your Account');
//   await page.locator('input[name="password"]').fill('Test@123');
//   await page.locator('button:has-text("Login")').click();
//   await expect(page).toHaveTitle(/Getways/i);

//   await page.getByRole('button', { name: /Redeem/i }).click();

//   await page.getByLabel('Add Transaction Note').fill('Redeeming 100 AOG via automation test');

//   await page.getByText('100', { exact: true }).click();


//   await page.getByRole('button', { name: /Redeem Request/i }).click();

//   await expect(page.locator("//div[@class='MuiSnackbarContent-message css-1exqwzz-MuiSnackbarContent-message']")).toBeVisible();
// });




// test('Redeem with 20 AOG and transaction note', async ({ page }) => {
//   await page.goto('https://skynbliss.co/login', { timeout: 120000, waitUntil: 'load' });

//   await page.locator('input[name="emailPhone"]').fill('TestPlayer@gmail.com');
//   await page.locator('button:has-text("Next")').click();
//   await expect(page.locator('h6')).toHaveText('Sign in to your Account');
//   await page.locator('input[name="password"]').fill('Test@123');
//   await page.locator('button:has-text("Login")').click();
//   await expect(page).toHaveTitle(/Getways/i);

//   await page.getByRole('button', { name: /Redeem/i }).click();

//   await page.getByLabel('Add Transaction Note').fill('Redeeming 20 AOG via automation test');

//   await page.getByText('20', { exact: true }).click();

//   await page.getByRole('button', { name: /Redeem Request/i }).click();

//   await expect(page.locator("//div[@class='MuiSnackbarContent-message css-1exqwzz-MuiSnackbarContent-message']")).toBeVisible();

// });




// test('Redeem with 200 AOG and transaction note', async ({ page }) => {
//   await page.goto('https://skynbliss.co/login', { timeout: 120000, waitUntil: 'load' });

//   await page.locator('input[name="emailPhone"]').fill('TestPlayer@gmail.com');
//   await page.locator('button:has-text("Next")').click();
//   await expect(page.locator('h6')).toHaveText('Sign in to your Account');
//   await page.locator('input[name="password"]').fill('Test@123');
//   await page.locator('button:has-text("Login")').click();
//   await expect(page).toHaveTitle(/Getways/i);

//   await page.getByRole('button', { name: /Redeem/i }).click();

//   await page.getByLabel('Add Transaction Note').fill('Redeeming 200 AOG via automation test');

//   await page.getByText('200', { exact: true }).click();

//   await page.getByRole('button', { name: /Redeem Request/i }).click();


//   await expect(page.locator("//div[@class='MuiSnackbarContent-message css-1exqwzz-MuiSnackbarContent-message']")).toBeVisible();

// });



// test('Redeem with 500 AOG and transaction note', async ({ page }) => {
//   await page.goto('https://skynbliss.co/login', { timeout: 120000, waitUntil: 'load' });

//   await page.locator('input[name="emailPhone"]').fill('TestPlayer@gmail.com');
//   await page.locator('button:has-text("Next")').click();
//   await expect(page.locator('h6')).toHaveText('Sign in to your Account');
//   await page.locator('input[name="password"]').fill('Test@123');
//   await page.locator('button:has-text("Login")').click();
//   await expect(page).toHaveTitle(/Getways/i);

//   await page.getByRole('button', { name: /Redeem/i }).click();

//   await page.getByLabel('Add Transaction Note').fill('Redeeming 500 AOG via automation test');

//   await page.getByText('500', { exact: true }).click();

//   await page.getByRole('button', { name: /Redeem Request/i }).click();

//   await expect(
//     page.locator("//div[@class='MuiSnackbarContent-message css-1exqwzz-MuiSnackbarContent-message']")
//   ).toBeVisible();
// });


// test('Verify all Recharge Records status filters()', async ({ page }) => {
//   // ==== STEP 5: Agent Login ====
//   await page.goto('https://skynbliss.co/login', { timeout: 120000 });
//   await page.locator('input[name="emailPhone"]').fill('Agent123@gmail.com');
//   await page.getByRole('button', { name: 'Next' }).click();
//   await expect(page.locator('h6')).toHaveText('Sign in to your Account');
//   await page.locator('input[name="password"]').fill('Agent@123');
//   await page.getByRole('button', { name: 'Login' }).click();
//   await expect(page).toHaveTitle(/Getways/i);

//   // ==== STEP 6: Navigate to Recharge Records ====
//   await page.getByText('Recharge Records', { exact: true }).click();
//   await expect(page.locator("//div[@class='MuiBox-root css-1pccdic']")).toBeVisible();

//   // ==== STEP 7: Loop through all filter statuses ====
//   const statuses = [
//     'All',
//     'Pending Referral Link',
//     'Pending Confirmation',
//     'Confirmed',
//     'Coins Credited',
//     'Expired',
//     'Failed Transaction'
//   ];

//   for (const status of statuses) {
//     console.log(`🔍 Checking filter: ${status}`);

//     // Open Filter
//     await page.getByRole('button', { name: 'Filter' }).click();

//     // Open Status dropdown
//     const statusDropdown = page.getByRole('combobox').nth(1); // second combobox = Status
//     await statusDropdown.click();

//     // Select status option
//     await page.getByRole('option', { name: status }).click();

//     // Apply filter
//     await page.getByRole('button', { name: 'Apply' }).click();

//     // Verify that table reloads (at least 1 row or "no records")
//     const tableRow = page.locator('tbody tr');
//     await expect(tableRow.first()).toBeVisible({ timeout: 10000 });

//     console.log(`✅ Verified filter applied successfully: ${status}`);
//   }
// });




